openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /authors:
    get:
      summary: ''
      operationId: getAuthors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 58
                    first_name: John
                    last_name: Doe
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                  -
                    id: 59
                    first_name: Jane
                    last_name: Doe
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postAuthors
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'First Name is required and must be a string.'
                  example: et
                  nullable: false
                last_name:
                  type: string
                  description: 'Last Name is required and must be a string.'
                  example: quos
                  nullable: false
              required:
                - first_name
                - last_name
      security: []
  '/authors/{id}':
    get:
      summary: ''
      operationId: getAuthorsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 58
                  first_name: John
                  last_name: Doe
                  created_at: '2025-01-30T07:53:05.000000Z'
                  updated_at: '2025-01-30T07:53:05.000000Z'
                properties:
                  id:
                    type: integer
                    example: 58
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  created_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putAuthorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteAuthorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 58
        required: true
        schema:
          type: integer
  /tags:
    get:
      summary: ''
      operationId: getTags
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 142
                    name: soluta
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                  -
                    id: 143
                    name: soluta
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                  -
                    id: 144
                    name: nemo
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                  -
                    id: 145
                    name: maxime
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                  -
                    id: 146
                    name: fugiat
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postTags
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name is required and must be a string.'
                  example: nobis
                  nullable: false
              required:
                - name
      security: []
  '/tags/{id}':
    get:
      summary: ''
      operationId: getTagsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 142
                  name: soluta
                  created_at: '2025-01-30T07:53:05.000000Z'
                  updated_at: '2025-01-30T07:53:05.000000Z'
                properties:
                  id:
                    type: integer
                    example: 142
                  name:
                    type: string
                    example: soluta
                  created_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putTagsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteTagsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 10
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 142
        required: true
        schema:
          type: integer
  /comments:
    get:
      summary: ''
      operationId: getComments
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 30
                    body: 'This is a comment on the image.'
                    commentable_id: 30
                    commentable_type: App\Models\Image
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      security: []
  '/comments/{id}':
    get:
      summary: ''
      operationId: getCommentsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 30
                  body: 'This is a comment on the image.'
                  commentable_id: 30
                  commentable_type: App\Models\Image
                  created_at: '2025-01-30T07:53:05.000000Z'
                  updated_at: '2025-01-30T07:53:05.000000Z'
                properties:
                  id:
                    type: integer
                    example: 30
                  body:
                    type: string
                    example: 'This is a comment on the image.'
                  commentable_id:
                    type: integer
                    example: 30
                  commentable_type:
                    type: string
                    example: App\Models\Image
                  created_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 19
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 30
        required: true
        schema:
          type: integer
  /images:
    get:
      summary: ''
      operationId: getImages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 30
                    author_id: 59
                    title: 'My first image'
                    url: 'https://example.com/image.jpg'
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                    tags_ids:
                      - 146
                    tags:
                      -
                        id: 146
                        name: fugiat
                        created_at: '2025-01-30T07:53:05.000000Z'
                        updated_at: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          taggable_type: App\Models\Image
                          taggable_id: 30
                          tag_id: 146
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postImages
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author_id:
                  type: integer
                  description: 'Author ID is required and must be an integer (foreign key). The <code>id</code> of an existing record in the authors table.'
                  example: 12
                  nullable: false
                title:
                  type: string
                  description: 'Title is required and must be a string.'
                  example: quos
                  nullable: false
                url:
                  type: string
                  description: 'URL is required and must be a string. Must be a valid URL.'
                  example: 'https://www.lebsack.info/ex-explicabo-ut-eaque-non-et'
                  nullable: false
                tags_ids:
                  type: array
                  description: 'Tags IDs must be integers.'
                  example:
                    - 15
                  items:
                    type: integer
              required:
                - author_id
                - title
                - url
      security: []
  '/images/{id}':
    get:
      summary: ''
      operationId: getImagesId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 30
                  author_id: 59
                  title: 'My first image'
                  url: 'https://example.com/image.jpg'
                  created_at: '2025-01-30T07:53:05.000000Z'
                  updated_at: '2025-01-30T07:53:05.000000Z'
                  tags_ids:
                    - 146
                  tags:
                    -
                      id: 146
                      name: fugiat
                      created_at: '2025-01-30T07:53:05.000000Z'
                      updated_at: '2025-01-30T07:53:05.000000Z'
                      pivot:
                        taggable_type: App\Models\Image
                        taggable_id: 30
                        tag_id: 146
                properties:
                  id:
                    type: integer
                    example: 30
                  author_id:
                    type: integer
                    example: 59
                  title:
                    type: string
                    example: 'My first image'
                  url:
                    type: string
                    example: 'https://example.com/image.jpg'
                  created_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  tags_ids:
                    type: array
                    example:
                      - 146
                    items:
                      type: integer
                  tags:
                    type: array
                    example:
                      -
                        id: 146
                        name: fugiat
                        created_at: '2025-01-30T07:53:05.000000Z'
                        updated_at: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          taggable_type: App\Models\Image
                          taggable_id: 30
                          tag_id: 146
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 146
                        name:
                          type: string
                          example: fugiat
                        created_at:
                          type: string
                          example: '2025-01-30T07:53:05.000000Z'
                        updated_at:
                          type: string
                          example: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          type: object
                          properties:
                            taggable_type:
                              type: string
                              example: App\Models\Image
                            taggable_id:
                              type: integer
                              example: 30
                            tag_id:
                              type: integer
                              example: 146
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putImagesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteImagesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 18
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the image.'
        example: 30
        required: true
        schema:
          type: integer
  '/images/{image_id}/comments':
    get:
      summary: ''
      operationId: getImagesImage_idComments
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 30
                    body: 'This is a comment on the image.'
                    commentable_id: 30
                    commentable_type: App\Models\Image
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postImagesImage_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'Body must be a string and is required.'
                  example: nihil
                  nullable: false
              required:
                - body
      security: []
    parameters:
      -
        in: path
        name: image_id
        description: 'The ID of the image.'
        example: 30
        required: true
        schema:
          type: integer
  /posts:
    get:
      summary: ''
      operationId: getPosts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 58
                    author_id: 58
                    title: 'My first post'
                    body: 'This is the body of my first post.'
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                    tags_ids:
                      - 142
                      - 144
                    tags:
                      -
                        id: 142
                        name: soluta
                        created_at: '2025-01-30T07:53:05.000000Z'
                        updated_at: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          taggable_type: App\Models\Post
                          taggable_id: 58
                          tag_id: 142
                      -
                        id: 144
                        name: nemo
                        created_at: '2025-01-30T07:53:05.000000Z'
                        updated_at: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          taggable_type: App\Models\Post
                          taggable_id: 58
                          tag_id: 144
                  -
                    id: 59
                    author_id: 58
                    title: 'My second post'
                    body: 'This is the body of my second post.'
                    created_at: '2025-01-30T07:53:05.000000Z'
                    updated_at: '2025-01-30T07:53:05.000000Z'
                    tags_ids: []
                    tags: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postPosts
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author_id:
                  type: integer
                  description: 'Author ID is required and must be an integer (foreign key). The <code>id</code> of an existing record in the authors table.'
                  example: 20
                  nullable: false
                title:
                  type: string
                  description: 'Title is required and must be a string.'
                  example: ab
                  nullable: false
                body:
                  type: string
                  description: 'Body is required and must be a string.'
                  example: consequuntur
                  nullable: false
                tags_ids:
                  type: array
                  description: 'Tags IDs must be integers.'
                  example:
                    - 12
                  items:
                    type: integer
              required:
                - author_id
                - title
                - body
      security: []
  '/posts/{id}':
    get:
      summary: ''
      operationId: getPostsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 58
                  author_id: 58
                  title: 'My first post'
                  body: 'This is the body of my first post.'
                  created_at: '2025-01-30T07:53:05.000000Z'
                  updated_at: '2025-01-30T07:53:05.000000Z'
                  tags_ids:
                    - 142
                    - 144
                  tags:
                    -
                      id: 142
                      name: soluta
                      created_at: '2025-01-30T07:53:05.000000Z'
                      updated_at: '2025-01-30T07:53:05.000000Z'
                      pivot:
                        taggable_type: App\Models\Post
                        taggable_id: 58
                        tag_id: 142
                    -
                      id: 144
                      name: nemo
                      created_at: '2025-01-30T07:53:05.000000Z'
                      updated_at: '2025-01-30T07:53:05.000000Z'
                      pivot:
                        taggable_type: App\Models\Post
                        taggable_id: 58
                        tag_id: 144
                properties:
                  id:
                    type: integer
                    example: 58
                  author_id:
                    type: integer
                    example: 58
                  title:
                    type: string
                    example: 'My first post'
                  body:
                    type: string
                    example: 'This is the body of my first post.'
                  created_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-30T07:53:05.000000Z'
                  tags_ids:
                    type: array
                    example:
                      - 142
                      - 144
                    items:
                      type: integer
                  tags:
                    type: array
                    example:
                      -
                        id: 142
                        name: soluta
                        created_at: '2025-01-30T07:53:05.000000Z'
                        updated_at: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          taggable_type: App\Models\Post
                          taggable_id: 58
                          tag_id: 142
                      -
                        id: 144
                        name: nemo
                        created_at: '2025-01-30T07:53:05.000000Z'
                        updated_at: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          taggable_type: App\Models\Post
                          taggable_id: 58
                          tag_id: 144
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 142
                        name:
                          type: string
                          example: soluta
                        created_at:
                          type: string
                          example: '2025-01-30T07:53:05.000000Z'
                        updated_at:
                          type: string
                          example: '2025-01-30T07:53:05.000000Z'
                        pivot:
                          type: object
                          properties:
                            taggable_type:
                              type: string
                              example: App\Models\Post
                            taggable_id:
                              type: integer
                              example: 58
                            tag_id:
                              type: integer
                              example: 142
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putPostsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deletePostsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 58
        required: true
        schema:
          type: integer
  '/posts/{post_id}/comments':
    get:
      summary: ''
      operationId: getPostsPost_idComments
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postPostsPost_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: 'Body must be a string and is required.'
                  example: ipsum
                  nullable: false
              required:
                - body
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 58
        required: true
        schema:
          type: integer
  /:
    get:
      summary: ''
      operationId: get
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: API
                  status: Connected
                properties:
                  message:
                    type: string
                    example: API
                  status:
                    type: string
                    example: Connected
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''

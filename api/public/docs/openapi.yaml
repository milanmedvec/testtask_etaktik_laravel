openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /authors:
    get:
      summary: ''
      operationId: getAuthors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postAuthors
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'First Name is required and must be a string.'
                  example: ratione
                  nullable: false
                last_name:
                  type: string
                  description: 'Last Name is required and must be a string.'
                  example: ducimus
                  nullable: false
              required:
                - first_name
                - last_name
      security: []
  '/authors/{id}':
    get:
      summary: ''
      operationId: getAuthorsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Author] 17'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Author] 17'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putAuthorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 13
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteAuthorsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 17
        required: true
        schema:
          type: integer
  /tags:
    get:
      summary: ''
      operationId: getTags
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postTags
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name is required and must be a string.'
                  example: culpa
                  nullable: false
              required:
                - name
      security: []
  '/tags/{id}':
    get:
      summary: ''
      operationId: getTagsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Tag] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Tag] 1'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putTagsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 6
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteTagsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: 1
        required: true
        schema:
          type: integer
  /comments:
    get:
      summary: ''
      operationId: getComments
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
  '/comments/{id}':
    get:
      summary: ''
      operationId: getCommentsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Comment] 1'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Comment] 1'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 6
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteCommentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 1
        required: true
        schema:
          type: integer
  /images:
    get:
      summary: ''
      operationId: getImages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postImages
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author_id:
                  type: integer
                  description: 'Author ID is required and must be an integer (foreign key). The <code>id</code> of an existing record in the authors table.'
                  example: 11
                  nullable: false
                title:
                  type: string
                  description: 'Title is required and must be a string.'
                  example: in
                  nullable: false
                url:
                  type: string
                  description: 'URL is required and must be a string. Must be a valid URL.'
                  example: 'http://strosin.org/id-et-perferendis-et-eius-fugiat-dignissimos-et'
                  nullable: false
                tags_ids:
                  type: array
                  description: 'Tags IDs must be integers.'
                  example:
                    - 2
                  items:
                    type: integer
              required:
                - author_id
                - title
                - url
      security: []
  '/images/{id}':
    get:
      summary: ''
      operationId: getImagesId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Image] 19'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Image] 19'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putImagesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteImagesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the image.'
        example: 19
        required: true
        schema:
          type: integer
  '/images/{image_id}/comments':
    get:
      summary: ''
      operationId: getImagesImage_idComments
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Image] 12'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Image] 12'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postImagesImage_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: image_id
        description: 'The ID of the image.'
        example: 12
        required: true
        schema:
          type: integer
  /posts:
    get:
      summary: ''
      operationId: getPosts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postPosts
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author_id:
                  type: integer
                  description: 'Author ID is required and must be an integer (foreign key). The <code>id</code> of an existing record in the authors table.'
                  example: 16
                  nullable: false
                title:
                  type: string
                  description: 'Title is required and must be a string.'
                  example: aperiam
                  nullable: false
                body:
                  type: string
                  description: 'Body is required and must be a string.'
                  example: velit
                  nullable: false
                tags_ids:
                  type: array
                  description: 'Tags IDs must be integers.'
                  example:
                    - 6
                  items:
                    type: integer
              required:
                - author_id
                - title
                - body
      security: []
  '/posts/{id}':
    get:
      summary: ''
      operationId: getPostsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Post] 18'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Post] 18'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putPostsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deletePostsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 18
        required: true
        schema:
          type: integer
  '/posts/{post_id}/comments':
    get:
      summary: ''
      operationId: getPostsPost_idComments
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Post] 12'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Post] 12'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postPostsPost_idComments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: post_id
        description: 'The ID of the post.'
        example: 12
        required: true
        schema:
          type: integer
  /:
    get:
      summary: ''
      operationId: get
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: API
                  status: Connected
                properties:
                  message:
                    type: string
                    example: API
                  status:
                    type: string
                    example: Connected
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
